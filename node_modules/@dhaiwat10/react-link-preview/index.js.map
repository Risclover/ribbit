{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/LinkPreview/Skeleton.tsx","../src/components/LinkPreview/LinkPreview.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport LoadingSkeleton from 'react-loading-skeleton';\n\nimport './skeleton.scss';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\ninterface SkeletonProps {\n  width?: string | number;\n  imageHeight?: string | number;\n  margin?: string | number;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({ width = '100%', imageHeight = '30vh', margin }) => {\n  return (\n    <div className='skeleton-container' style={{ width, margin }}>\n      <LoadingSkeleton width={width} height={imageHeight} />\n      <div className='skeleton-lower-container'>\n        <LoadingSkeleton count={3} />\n      </div>\n    </div>\n  );\n};\n\nexport default Skeleton;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport './linkPreview.scss';\nimport Skeleton from './Skeleton';\n\nconst proxyLink = 'https://rlp-proxy.herokuapp.com/v2?url=';\nexport const placeholderImg = 'https://i.imgur.com/UeDNBNQ.jpeg';\n\nfunction isValidResponse(res: APIResponse | null): boolean {\n  if (!res) return false;\n\n  return (\n    res.title !== null &&\n    res.description !== null &&\n    res.image !== null &&\n    res.siteName !== null &&\n    res.hostname !== null &&\n    res.title !== undefined &&\n    res.description !== undefined &&\n    res.image !== undefined &&\n    res.siteName !== undefined &&\n    res.hostname !== undefined &&\n    res.image !== 'null' &&\n    !res.image.startsWith('/')\n  );\n}\n\nexport interface LinkPreviewProps {\n  url: string;\n  className?: string;\n  width?: string | number;\n  height?: string | number;\n  descriptionLength?: number;\n  borderRadius?: string | number;\n  imageHeight?: string | number;\n  textAlign?: 'left' | 'right' | 'center';\n  margin?: string | number;\n  fallback?: JSX.Element[] | JSX.Element | null;\n  backgroundColor?: string;\n  primaryTextColor?: string;\n  secondaryTextColor?: string;\n  borderColor?: string;\n  showLoader?: boolean;\n  customLoader?: JSX.Element[] | JSX.Element | null;\n  openInNewTab?: boolean;\n  fetcher?: (url: string) => Promise<APIResponse | null>;\n  fallbackImageSrc?: string;\n  explicitImageSrc?: string;\n  /* Whether the placeholder image is displayed in case no image could be scraped */\n  showPlaceholderIfNoImage?: boolean;\n  onSuccess?: (metadata: APIResponse | null) => void;\n}\n\nexport interface APIResponse {\n  title: string | null;\n  description: string | null;\n  image: string | null;\n  siteName: string | null;\n  hostname: string | null;\n}\n\nexport const LinkPreview: React.FC<LinkPreviewProps> = ({\n  url,\n  className = '',\n  width,\n  height,\n  descriptionLength,\n  borderRadius,\n  imageHeight,\n  textAlign,\n  margin,\n  fallback = null,\n  backgroundColor = 'white',\n  primaryTextColor = 'black',\n  secondaryTextColor = 'rgb(100, 100, 100)',\n  borderColor = '#ccc',\n  showLoader = true,\n  customLoader = null,\n  openInNewTab = true,\n  fetcher,\n  fallbackImageSrc = placeholderImg,\n  explicitImageSrc = null,\n  showPlaceholderIfNoImage = true,\n  onSuccess = (metadata) => {},\n}) => {\n  const _isMounted = useRef(true);\n  const [metadata, setMetadata] = useState<APIResponse | null>();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    _isMounted.current = true;\n    setLoading(true);\n\n    if (fetcher) {\n      fetcher(url)\n        .then((res) => {\n          if (_isMounted.current) {\n            let metadata;\n            if (isValidResponse(res)) {\n              metadata = res;\n              setMetadata(res);\n            } else {\n              metadata = null;\n              setMetadata(null);\n            }\n            onSuccess(metadata);\n            setLoading(false);\n          }\n        })\n        .catch((err: Error) => {\n          console.error(err);\n          console.error('No metadata could be found for the given URL.');\n          if (_isMounted.current) {\n            onSuccess(null);\n            setMetadata(null);\n            setLoading(false);\n          }\n        });\n    } else {\n      fetch(proxyLink + url)\n        .then((res) => res.json())\n        .then((res) => {\n          if (_isMounted.current) {\n            setMetadata((res.metadata as unknown) as APIResponse);\n            onSuccess(res.metadata);\n            setLoading(false);\n          }\n        })\n        .catch((err: Error) => {\n          console.error(err);\n          console.error('No metadata could be found for the given URL.');\n          if (_isMounted.current) {\n            onSuccess(null);\n            setMetadata(null);\n            setLoading(false);\n          }\n        });\n    }\n\n    return () => {\n      _isMounted.current = false;\n    };\n  }, [url, fetcher]);\n\n  if (loading && showLoader) {\n    if (customLoader) {\n      return <>{customLoader}</>;\n    } else {\n      return <Skeleton width={width} imageHeight={imageHeight} margin={margin} />;\n    }\n  }\n\n  if (!metadata) {\n    return <>{fallback}</>;\n  }\n\n  const { image, description, title, siteName, hostname } = metadata;\n\n  const onClick = () => {\n    const browserTarget = openInNewTab ? '_blank' : '_self';\n    window.open(url, browserTarget);\n  };\n\n  return (\n    <div\n      data-testid='container'\n      onClick={onClick}\n      className={`Container ${className}`}\n      style={{ width, height, borderRadius, textAlign, margin, backgroundColor, borderColor }}\n    >\n      {(image || fallbackImageSrc) && showPlaceholderIfNoImage && (\n        <div\n          data-testid='image-container'\n          style={{\n            borderTopLeftRadius: borderRadius,\n            borderTopRightRadius: borderRadius,\n            backgroundImage: `url(${\n              explicitImageSrc || image || fallbackImageSrc\n            }), url(${fallbackImageSrc})`,\n            height: imageHeight,\n          }}\n          className='Image'\n        ></div>\n      )}\n      <div className='LowerContainer'>\n        <h3 data-testid='title' className='Title' style={{ color: primaryTextColor }}>\n          {title}\n        </h3>\n        {description && (\n          <span\n            data-testid='desc'\n            className='Description Secondary'\n            style={{ color: secondaryTextColor }}\n          >\n            {descriptionLength\n              ? description.length > descriptionLength\n                ? description.slice(0, descriptionLength) + '...'\n                : description\n              : description}\n          </span>\n        )}\n        <div className='Secondary SiteDetails' style={{ color: secondaryTextColor }}>\n          {siteName && <span>{siteName} â€¢ </span>}\n          <span>{hostname}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Skeleton","_a","_b","width","_c","imageHeight","margin","React","className","LoadingSkeleton","height","count","url","descriptionLength","borderRadius","textAlign","fallback","_d","backgroundColor","_e","primaryTextColor","_f","secondaryTextColor","_g","borderColor","_h","showLoader","_j","customLoader","_k","openInNewTab","fetcher","_l","fallbackImageSrc","_m","explicitImageSrc","_o","showPlaceholderIfNoImage","_p","onSuccess","metadata","_isMounted","useRef","_q","useState","setMetadata","_r","loading","setLoading","useEffect","current","then","res","metadata_1","title","description","image","siteName","hostname","undefined","startsWith","isValidResponse","catch","err","console","error","fetch","json","onClick","browserTarget","window","open","borderTopLeftRadius","borderTopRightRadius","backgroundImage","color","length","slice"],"mappings":"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"}