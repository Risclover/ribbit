'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (callback) {
    try {

        _child_process2.default.execFile("/sbin/ip", ["route"], handleIpRouteResults(callback));
    } catch (error) {

        if (callback) {
            callback(error, undefined);
        }
    }
};

var _child_process = require('child_process');

var _child_process2 = _interopRequireDefault(_child_process);

var _lodash = require('lodash.isstring');

var _lodash2 = _interopRequireDefault(_lodash);

var _lodash3 = require('lodash.isarray');

var _lodash4 = _interopRequireDefault(_lodash3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var handleIpRouteResults = function handleIpRouteResults(callback) {
    return function (error, stdout, stderr) {

        if (stdout && (0, _lodash2.default)(stdout)) {

            var output = stdout;

            var match = output.match(/default via ((?:[0-9]{1,3}\.){3}[0-9]{1,3}) dev eth0/);

            var ip = undefined;
            if ((0, _lodash4.default)(match) && match.length >= 2) {
                ip = match[1];
            }

            if (ip) {
                callback(undefined, ip);
            } else {
                callback(new Error("Unable to find ip, perhaps call while not within a Docker container"), undefined);
            }
        } else if (error) {

            callback(error, undefined);
        } else if (stderr) {

            callback(new Error(stderr), undefined);
        } else {

            callback(new Error("No results or feedback given"), undefined);
        }
    };
};