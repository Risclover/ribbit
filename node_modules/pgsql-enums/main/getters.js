"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAstNodes = void 0;
const libpg_enums_1 = __importDefault(require("./libpg_enums"));
const libpg_structs_1 = __importDefault(require("./libpg_structs"));
let astNodes;
const getAstNodes = () => {
    if (astNodes)
        return astNodes;
    const nodes = libpg_structs_1.default['nodes/parsenodes'];
    astNodes = Object.keys(nodes).reduce((m, key) => {
        const obj = nodes[key].fields.reduce((m2, field) => {
            if (!field.name) {
                return m2;
            }
            const type = field.c_type.replace(/\*$/, '');
            let nested = false;
            let isEnum = false;
            if (libpg_structs_1.default['nodes/parsenodes'].hasOwnProperty(type)) {
                nested = true;
            }
            if (libpg_enums_1.default['nodes/parsenodes'].hasOwnProperty(type)) {
                isEnum = true;
            }
            m2[field.name] = {
                type
            };
            if (nested)
                m2[field.name].nested = nested;
            if (isEnum)
                m2[field.name].enum = isEnum;
            return m2;
        }, {});
        m[key] = obj;
        return m;
    }, {});
    return astNodes;
};
exports.getAstNodes = getAstNodes;
