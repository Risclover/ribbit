{"version":3,"sources":["../src/deparse-pg.ts"],"sourcesContent":["import * as pgParser from \"pgsql-parser\"\nimport { pg } from \"./types/pg\"\n\nexport const deparsePg = (exp: pg.Statement | pg.Expression) => {\n  if (\"DefElem\" in exp) {\n    if (exp.DefElem.defname === \"owned_by\") {\n      return `OWNED BY ${\n        \"List\" in exp.DefElem.arg\n          ? exp.DefElem.arg.List.items.map(deparsePg).join(\".\")\n          : deparsePg(exp.DefElem.arg)\n      }`\n    } else {\n      throw new Error(`Unsupported DefElem: ${JSON.stringify(exp)}`)\n    }\n  }\n  if (\"String\" in exp) {\n    return exp.String.str\n  }\n  if (\"AlterSeqStmt\" in exp) {\n    const { sequence, options } = exp.AlterSeqStmt\n    console.log({\n      // sequence: deparsePg(sequence),\n      sequence: ``,\n      options: options.map(deparsePg),\n    })\n    return `ALTER SEQUENCE ${sequence.schemaname}.${sequence.relname} ${options\n      .map(deparsePg)\n      .join(\" \")}`\n  }\n  return pgParser.deparse(exp)\n}\n\nexport default deparsePg\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA0B;AAGnB,IAAM,YAAY,CAAC,QAAsC;AAC9D,MAAI,aAAa,KAAK;AACpB,QAAI,IAAI,QAAQ,YAAY,YAAY;AACtC,aAAO,YACL,UAAU,IAAI,QAAQ,MAClB,IAAI,QAAQ,IAAI,KAAK,MAAM,IAAI,SAAS,EAAE,KAAK,GAAG,IAClD,UAAU,IAAI,QAAQ,GAAG;AAAA,IAEjC,OAAO;AACL,YAAM,IAAI,MAAM,wBAAwB,KAAK,UAAU,GAAG,GAAG;AAAA,IAC/D;AAAA,EACF;AACA,MAAI,YAAY,KAAK;AACnB,WAAO,IAAI,OAAO;AAAA,EACpB;AACA,MAAI,kBAAkB,KAAK;AACzB,UAAM,EAAE,UAAU,YAAY,IAAI;AAClC,YAAQ,IAAI;AAAA,MAEV,UAAU;AAAA,MACV,SAAS,QAAQ,IAAI,SAAS;AAAA,IAChC,CAAC;AACD,WAAO,kBAAkB,SAAS,cAAc,SAAS,WAAW,QACjE,IAAI,SAAS,EACb,KAAK,GAAG;AAAA,EACb;AACA,SAAO,AAAS,iBAAQ,GAAG;AAC7B;AAEA,IAAO,qBAAQ;","names":[]}