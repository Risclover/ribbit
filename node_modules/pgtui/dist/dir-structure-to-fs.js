var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/dir-structure-to-fs.ts
var dir_structure_to_fs_exports = {};
__export(dir_structure_to_fs_exports, {
  dirStructureToFs: () => dirStructureToFs
});
module.exports = __toCommonJS(dir_structure_to_fs_exports);
var import_mkdirp = __toESM(require("mkdirp"));
var import_promises = __toESM(require("fs/promises"));
var import_path = __toESM(require("path"));
var dirStructureToFs = async ({
  outputDir,
  dirStructure,
  header
}) => {
  for (const filePath in dirStructure) {
    const fullFilePath = import_path.default.resolve(outputDir, filePath);
    await (0, import_mkdirp.default)(import_path.default.dirname(fullFilePath));
    await import_promises.default.writeFile(fullFilePath, (header ? `-- ${header}

` : "") + dirStructure[filePath]);
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  dirStructureToFs
});
//# sourceMappingURL=dir-structure-to-fs.js.map