var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/sql-to-ts-type.ts
var sql_to_ts_type_exports = {};
__export(sql_to_ts_type_exports, {
  default: () => sql_to_ts_type_default,
  sqlToTsType: () => sqlToTsType
});
module.exports = __toCommonJS(sql_to_ts_type_exports);
var sqlToTsType = (type, canBeNull) => {
  let tsType = null;
  const typeWithoutArray = type.replace(/\[\]$/, "");
  const isTypeArray = type.endsWith("[]");
  switch (typeWithoutArray) {
    case "text":
    case "uuid":
    case "varchar":
      tsType = "string";
      break;
    case "int4":
    case "int":
      tsType = "number";
      break;
    case "jsonb":
      tsType = "any";
      break;
    case "timestamptz":
    case "timestamp":
      tsType = "Date";
      break;
    case "bool":
    case "boolean":
      tsType = "boolean";
      break;
    default:
      tsType = "any";
      break;
  }
  if (isTypeArray) {
    tsType += "[]";
  }
  if (tsType === "any") {
    return tsType;
  }
  return canBeNull ? `${tsType} | null` : tsType;
};
var sql_to_ts_type_default = sqlToTsType;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  sqlToTsType
});
//# sourceMappingURL=sql-to-ts-type.js.map