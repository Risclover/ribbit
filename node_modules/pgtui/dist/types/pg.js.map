{"version":3,"sources":["../../src/types/pg.ts"],"sourcesContent":["export namespace pg {\n  export type Statement =\n    | AlterTableStmt\n    | AlterSeqStmt\n    | CreateTrigStmt\n    | ViewStmt\n    | AlterOwnerStmt\n    | VariableSetStmt\n    | CreateStmt\n    | CreateFunctionStmt\n    | CreateDomainStmt\n    | CreateSchemaStmt\n    | GrantStmt\n    | CreatePolicyStmt\n    | CreateSeqStmt\n    | CreateExtensionStmt\n    | CommentStmt\n    | IndexStmt\n    | RuleStmt\n    | InsertStmt\n\n  export type Expression =\n    | ValueObject\n    | RoleSpec\n    | DefElem\n    | Constraint\n    | Relation\n    | ColumnDef\n    | Array<Expression>\n\n  export type ObjectType =\n    | \"OBJECT_EXTENSION\"\n    | \"OBJECT_SCHEMA\"\n    | \"OBJECT_TABLE\"\n    | \"OBJECT_FUNCTION\"\n    | \"OBJECT_SEQUENCE\"\n    | \"OBJECT_DOMAIN\"\n\n  export type IndexStmt = {\n    IndexStmt: {\n      idxname: string\n      relation: Relation\n      accessMethod: \"btree\"\n      indexParams: Array<any>\n      unique: boolean\n    }\n  }\n\n  export type CommentStmt = {\n    CommentStmt: {\n      objtype: ObjectType\n      object: ValueObject\n      comment: string\n    }\n  }\n\n  export type CreateExtensionStmt = {\n    CreateExtensionStmt: {\n      extname: string\n      if_not_exists: boolean\n      options: Array<ValueObject>\n    }\n  }\n\n  export type ValueObject =\n    | {\n        String: { str: string }\n      }\n    | { List: { items: Array<ValueObject> } }\n\n  export type RoleSpec = {\n    roletype: \"ROLESPEC_CSTRING\"\n    rolename: string\n  }\n\n  export type Relation = {\n    schemaname: string\n    relname: string\n  }\n\n  export type Command = AlterTableCmd\n\n  export type AlterTableCmd = {\n    AlterTableCmd: {\n      subtype: \"AT_EnableRowSecurity\"\n      behavior: \"DROP_RESTRICT\"\n    }\n  }\n\n  export type DefElem = {\n    DefElem: {\n      defname: \"owned_by\"\n      arg: ValueObject\n    }\n  }\n\n  export type AlterSeqStmt = {\n    AlterSeqStmt: {\n      sequence: Relation\n      options: Array<DefElem>\n    }\n  }\n\n  export type AlterTableStmt = {\n    AlterTableStmt: {\n      relation: Relation\n      cmds: Array<Command>\n      relkind: ObjectType\n    }\n  }\n\n  export type Constraint = {\n    contype: \"CONSTR_NOTNULL\"\n  }\n\n  export type ColumnDef = {\n    ColumnDef: {\n      colname: string\n      typeName: { names: Array<ValueObject>; typemod: -1 }\n      is_local: boolean\n      constraints: Array<Constraint>\n    }\n  }\n\n  export type CreateStmt = {\n    CreateStmt: {\n      relation: Relation\n      tableElts: Array<ColumnDef>\n      oncommit: \"ONCOMMIT_NOOP\"\n    }\n  }\n\n  export type CreateSeqStmt = {\n    CreateSeqStmt: {\n      sequence: Relation\n      options: Array<ValueObject>\n    }\n  }\n\n  export type GrantStmt = {\n    GrantStmt: {\n      is_grant: boolean\n      targtype: \"ACL_TARGET_OBJECT\"\n      objtype: ObjectType\n      objects: Array<ValueObject>\n      grantees: Array<RoleSpec>\n    }\n  }\n  export type CreateSchemaStmt = { CreateSchemaStmt: { schemaname: string } }\n  export type CreateFunctionStmt = {\n    CreateFunctionStmt: {\n      funcname: Array<ValueObject>\n      returnType: { names: Array<ValueObject> }\n      options: Array<{\n        DefElem: {\n          defname: \"language\" | \"as\"\n          arg: ValueObject\n        }\n      }>\n    }\n  }\n  export type CreateDomainStmt = {\n    CreateDomainStmt: {\n      domainname: Array<ValueObject>\n      typeName: {\n        names: Array<ValueObject>\n      }\n    }\n  }\n  export type VariableSetStmt = { VariableSetStmt: {} }\n  export type AlterOwnerStmt = {\n    AlterOwnerStmt: {\n      objectType: ObjectType\n      object: ValueObject\n      newowner: RoleSpec\n    }\n  }\n  export type ViewStmt = {\n    ViewStmt: {\n      view: Relation\n      query: Statement\n    }\n  }\n  export type CreateTrigStmt = {\n    CreateTrigStmt: {\n      trigname: string\n      relation: Relation\n      funcname: Array<ValueObject>\n      row: boolean\n      timing: number\n      events: number\n    }\n  }\n\n  export type CreatePolicyStmt = {\n    CreatePolicyStmt: {\n      policy_name: string\n      table: Relation\n      cmd_name: string\n      permissive: boolean\n      roles: Array<{\n        RoleSpec: {\n          roletype: \"ROLESPEC_CSTRING\"\n          rolename: string\n        }\n      }>\n      qual: Expression\n    }\n  }\n\n  export type InsertStmt = {\n    InsertStmt: {\n      relation: Relation\n      selectStmt: any,\n      returningList: Array<any>\n    }\n  }\n\n  export type RuleStmt = {\n    RuleStmt: {\n      relation: Relation\n      rulename: string\n      instead: boolean\n      actions: Array<InsertStmt>\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}