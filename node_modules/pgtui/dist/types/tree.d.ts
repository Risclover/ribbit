type Column = {
    name: string;
    type: string;
    query: string;
    comments: Array<{
        comment: string;
        query: string;
    }>;
};
type View = {
    name: string;
    columns: Array<Column>;
    query: string;
    grants: Array<Grant>;
    triggers: {
        [triggerName: string]: Trigger;
    };
    alterations: Array<TableAlteration>;
    owner: string;
};
type Policy = {
    name: string;
    query: string;
};
type TableAlteration = {
    query: string;
};
type Grant = {
    query: string;
};
type Trigger = {
    name: string;
    functionName: string;
    query: string;
};
type Rule = {
    name: string;
    query: string;
};
type PgFunction = {
    name: string;
    owner: string;
    query: string;
};
type Domain = {
    name: string;
    owner: string;
    type: string;
};
type Sequence = {
    name: string;
    query: string;
    grants: Array<Grant>;
    alterations: Array<TableAlteration>;
    owner: string;
};
type Index = {
    name: string;
    query: string;
};
type Table = {
    name: string;
    columns: Array<Column>;
    query: string;
    policies: {
        [policyName: string]: Policy;
    };
    triggers: {
        [triggerName: string]: Trigger;
    };
    rules: {
        [ruleName: string]: Rule;
    };
    indexes: {
        [indexName: string]: Index;
    };
    alterations: Array<TableAlteration>;
    sequences: Array<Sequence>;
    grants: Array<Grant>;
    owner: string;
};
type Schema = {
    name: string;
    tables: {
        [tableName: string]: Table;
    };
    views: {
        [viewName: string]: View;
    };
    functions: {
        [functionName: string]: PgFunction;
    };
    domains: {
        [domainName: string]: Domain;
    };
    grants: Array<Grant>;
    owner: string;
    _tablelessSequences: {
        [sequenceName: string]: Sequence;
    };
};
type Extension = {
    name: string;
    query: string;
};
type DatabaseTree = {
    schemas: {
        [schemaName: string]: Schema;
    };
    misc: Array<{
        query: string;
    }>;
    extensions: Array<Extension>;
};

export { Column, DatabaseTree, Domain, Extension, Grant, Index, PgFunction, Policy, Rule, Schema, Sequence, Table, TableAlteration, Trigger, View };
