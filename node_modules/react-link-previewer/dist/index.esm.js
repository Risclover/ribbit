import React, { useState, useEffect } from 'react';
import cx from 'classnames';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var useLinkPreview = function useLinkPreview(_ref) {
  var href = _ref.href,
      _ref$host = _ref.host,
      host = _ref$host === void 0 ? 'https://og-service.herokuapp.com/' : _ref$host,
      _ref$fetchOptions = _ref.fetchOptions,
      fetchOptions = _ref$fetchOptions === void 0 ? {} : _ref$fetchOptions;

  var _useState = useState(),
      _useState2 = _slicedToArray(_useState, 2),
      data = _useState2[0],
      setData = _useState2[1];

  var _useState3 = useState(),
      _useState4 = _slicedToArray(_useState3, 2),
      error = _useState4[0],
      setError = _useState4[1];

  useEffect(function () {
    fetch("".concat(host, "?link=").concat(href), fetchOptions).then(function (res) {
      return res.json();
    }).then(function (json) {
      return setData(json);
    })["catch"](function (e) {
      return setError(e);
    });
  }, []);
  return {
    data: data,
    error: error
  };
};
var LinkPreview = function LinkPreview(_ref2) {
  var _data$images;

  var children = _ref2.children,
      href = _ref2.href,
      host = _ref2.host,
      fetchOptions = _ref2.fetchOptions,
      external = _ref2.external,
      props = _objectWithoutProperties(_ref2, ["children", "href", "host", "fetchOptions", "external"]);

  var _useLinkPreview = useLinkPreview({
    href: href,
    host: host,
    fetchOptions: fetchOptions
  }),
      data = _useLinkPreview.data,
      error = _useLinkPreview.error;

  var _useState5 = useState(false),
      _useState6 = _slicedToArray(_useState5, 2),
      visible = _useState6[0],
      setVisible = _useState6[1];

  return React.createElement("div", {
    onMouseLeave: function onMouseLeave() {
      return setVisible(false);
    },
    onMouseOver: function onMouseOver() {
      return setVisible(true);
    },
    className: cx('link-preview', props.className)
  }, React.createElement("a", Object.assign({}, props, {
    href: href,
    rel: external ? 'noopener noreferrer' : '',
    target: external ? '_blank' : '_self'
  }), children), data && React.createElement("div", {
    onTouchStart: function onTouchStart() {
      return setVisible(true);
    },
    onTouchCancel: function onTouchCancel() {
      return setVisible(false);
    },
    onMouseOver: function onMouseOver() {
      return setVisible(true);
    },
    className: visible ? 'visible' : 'hidden',
    "aria-hidden": true
  }, React.createElement("a", Object.assign({}, props, {
    href: href
  }), React.createElement("h2", null, data.title)), React.createElement("p", null, data.description), (_data$images = data.images) === null || _data$images === void 0 ? void 0 : _data$images.map(function (img) {
    return React.createElement("img", {
      src: img.URL,
      height: img.Height,
      width: img.Width,
      alt: img.Alt
    });
  })), error && React.createElement("div", {
    role: "alert"
  }, error.message));
};

export { LinkPreview, useLinkPreview };
